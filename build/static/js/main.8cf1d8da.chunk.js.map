{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectMenu.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","App.js","serviceWorker.js","index.js"],"names":["SignedInLinks","className","to","SignedOutLinks","Navbar","Notifications","ProjectMenu","ProjectList","Dashboard","Component","ProjectDetails","props","id","match","params","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qRAeeA,EAXO,WAClB,OACI,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,KAAZ,gBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,KAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,IAAID,UAAU,mCAA1B,SCKDE,EAVQ,WACnB,OACI,wBAAIF,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,KAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,KAAZ,YCSDE,EAZA,WACX,OACI,yBAAKH,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,wBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCDDI,EARO,WAClB,OACI,6BACI,6CCSGC,EAZK,WAChB,OACI,yBAAKL,UAAU,+BACP,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAhB,2BACA,qDACA,uBAAGA,UAAU,aAAb,oBCMLM,EAXK,WAChB,OACI,yBAAKN,UAAU,wBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCYGO,E,uKAfP,OACI,yBAAKP,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,wBACX,kBAAC,EAAD,a,GATAQ,aCiBTC,EAnBQ,SAACC,GACpB,IAAMC,EAAKD,EAAME,MAAMC,OAAOF,GAC9B,OACI,yBAAKX,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBAC3B,0BAAMA,UAAU,cAAhB,mBAA8CW,GAC9B,unBAEJ,yBAAKX,UAAU,wCACX,0DACA,kDCULc,E,uKAdX,OACE,kBAAC,IAAD,KACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAAC,IAAD,CAAOS,KAAK,eAAeC,UAAWR,W,GARhCD,aCKEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAST,MACvB,2DCZNU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8cf1d8da.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\n\nconst SignedInLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/'>New Project</NavLink></li>\n            <li><NavLink to='/'>Log Out</NavLink></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>RK</NavLink></li>\n        </ul>\n\n    )\n}\n\nexport default SignedInLinks","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/'>Signup</NavLink></li>\n            <li><NavLink to='/'>Login</NavLink></li>\n        </ul>\n\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\"> rentakellyDashboard</Link>\n                <SignedInLinks />\n                <SignedOutLinks />\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar","import React from 'react'\n\nconst Notifications = ()=> {\n    return (\n        <div>\n            <p>Notificatios</p>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\n\nconst ProjectMenu = () => {\n    return (\n        <div className=\"card z-depth-0 project-menu\">\n                <div className=\"card-content gray-text text-darken-3\">\n                    <span className=\"card-title\">Projeto de Climatologia</span>\n                    <p>Postado por RentaKelly</p>\n                    <p className=\"grey-text\">30 Julho, 15h</p>\n                </div>\n        </div>\n    )\n}\n\nexport default ProjectMenu","import React from 'react'\nimport ProjectMenu from './ProjectMenu'\n\nconst ProjectList = () => {\n    return (\n        <div className=\"project-list section\">\n            <ProjectMenu />\n            <ProjectMenu />\n            <ProjectMenu />\n            <ProjectMenu />\n        </div>\n    )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\n\nclass Dashboard extends Component{\n    render(){\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard","import React from 'react'\n\nconst ProjectDetails = (props) => {\n    const id = props.match.params.id;\n    return (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-o\">\n                <div className=\"card-content\">\n    <span className=\"card-title\">Project Title - {id}</span>\n                    <p>Lorem ipsum viverra torquent morbi vehicula euismod lobortis, semper lobortis per tempus primis proin sit vulputate, leo justo inceptos auctor dui egestas. id porttitor class dolor maecenas nisl volutpat semper dapibus elit non, vel id eleifend nullam augue fringilla est dui. nisl inceptos tortor a lectus per quisque nibh morbi litora, orci sem erat proin leo donec malesuada dictum, id ante congue felis nunc senectus sapien aliquam. lorem aenean morbi sed aenean platea justo elit vestibulum, sociosqu elit senectus ligula semper in ullamcorper gravida, hac nullam est lorem platea fusce velit. </p>\n                </div>\n                <div className=\"car-action great lighten-4 gray-text\">\n                    <div>Posted for the RentaKelly</div>\n                    <div>30 Julho, 16h</div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProjectDetails","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}